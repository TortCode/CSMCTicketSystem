{% extends '../base.html.twig' %}
{#{% extends '../../../shared/base.html.twig' %}#}
{% block body %}
    <div class="chart-container" style="position: relative; width: 100%; height: 100%;">
    <h3>Report - Attendance (by Day of Week)</h3>
        <canvas id="barGraph"></canvas>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js"></script>
    <script>
            $(document).ready(function () {
                // JSON data representing course visits
                const courseVisits = {{ courseVisits|raw }};

                const daysOfWeek = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
                const datasets = [];

                for (const semester in courseVisits) {
                    const data = daysOfWeek.map(day => courseVisits[semester][day]);
                    datasets.push({
                        label: semester,
                        data: data,
                        backgroundColor: randomColor(), // You can create a function to generate random colors
                        borderColor: randomColor(),
                        borderWidth: 1
                    });
                }

                const ctx = document.getElementById('barGraph').getContext('2d');

               var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: daysOfWeek,
                        datasets: datasets
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Days of the Week'
                                }
                            },
                            y: {
                                title: {
                                    display: true,
                                    text: 'Course Visits'
                                },
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 5,
                                    callback: function(value) {
                                      return value;
                                }
                            }
                          }
                        },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        }
                    },
                    animation: {
                        onComplete: function () {
                            var chartInstance = this.chart;
                            var ctx = chartInstance.ctx;

                            ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);
                            ctx.fillStyle = 'black';
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'bottom';

                            this.data.datasets.forEach(function (dataset, i) {
                                var meta = chartInstance.controller.getDatasetMeta(i);
                                meta.data.forEach(function (bar, index) {
                                    var data = dataset.data[index];
                                    ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                });
                            });
                        }
                    }
                  }
                });
                // Function to generate random colors
                function randomColor() {
                    const r = Math.floor(Math.random() * 256);
                    const g = Math.floor(Math.random() * 256);
                    const b = Math.floor(Math.random() * 256);
                    return `rgba(${r},${g},${b},1)`;
                }
            });
        </script>
{% endblock %}
