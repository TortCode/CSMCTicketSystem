{% extends '../base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css">
    <link rel="stylesheet" type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.3/scheduler.min.css">

    <style>
        /*#row-main {*/
        /*overflow-x: hidden;*/
        /*}*/

        #content {
            transition: width 0.3s ease;
        }

        #sidebar {
            transition: margin 0.3s ease;
        }

        .collapsed {
            display: none;
        }

        .no-overflow {
            /*white-space: nowrap;*/
            /*overflow: hidden;*/
            /*text-overflow: ellipsis;*/
        }

        /*@media (min-width: 992px) {*/
        /*.collapsed {*/
        /*display: block;*/
        /*!* same width as sidebar *!*/
        /*margin-right: -25%;*/
        /*}*/
        /*}*/

        .row-eq-height {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
        }
    </style>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.21.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.3/scheduler.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#sidebar-tdocker-compose downoggle').on('click', function () {
                $("#sidebar").toggleClass("collapsed");
                $("#content").toggleClass("col-md-12 col-md-10");
            });

            /*
            $('#create-session').on('click', function () {
                $('#session-modal').modal('show');
            });
            */

            $('#external-events .fc-event').each(function () {
                // store data so the calendar knows to render an event upon drop
                // $(this).data('event', {
                //     title: $.trim($(this).text()),
                //     stick: true
                // });

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,
                    revertDuration: 0
                });
            });

            // TODO implement
            var resolveColor = function (event) {
                return '';
            }

            // TODO separate out quiz
            var transformEvent = function (event) {
                var e = {};
                if (event.hasOwnProperty('quiz') && event.quiz !== null) {
                    e.allDay = true;
                    e.title = event.quiz.topic;
                } else if (event.hasOwnProperty('session') && event.session !== null) {
                    e.allDay = false;
                    e.title = event.session.topic;
                    if(event.registrations !== undefined) {
                            e.registrations = event.session.registrations.length;
                    }
                    e.registeredStudents = event.session.registeredStudents;
                    e.capacity = event.session.capacity;
                    e.assignments = event.session.assignments;
                    for (var i in event.session.assignments) {
                        if (event.session.assignments[i].absence) {
                            e.borderColor = '#ff0000';
                        }
                    }

                    e.id = event.id
                } else {
                    return e;
                }

                e.start = moment(event.startTime);
                e.end = moment(event.endTime);
		        e.location = {};
                if(event.location !== null) {
                	e.location.id = event.location.id;
                	e.location.room = event.location.room;
		        }
                e.color = resolveColor(event);
                return e;
            };

            var $cal = $('#calendar');
            $cal.fullCalendar({
                schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
                height: 'auto',
                defaultView: 'agendaWeek',
                minTime: '09:00:00',
                maxTime: '23:00:00',
                header: {
                    left: 'prev',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listMonth next',
                },
                footer: false,
                slotDuration: '00:15:00',
                editable: true,
                droppable: true,
                dragRevertDuration: 0,
                drop: function (date) {
                    var count = $(this).data('count') - 1;
                    var event = $(this).data('event');
		    $('#counter-' + event.session).text(count);
                    $('#' + event.counter).text(count);
                    $(this).data('count', count);
                    if (count == 0) {
                        $(this).hide();
                        $('#' + $(this).data('counter')).hide();
                    }
                },
                eventReceive: function (event) {
		            $.ajax({
                        url: "{{ path('/admin/session/calendar/scheduleEvent') }}",
                        data: {
                            
                                "start": moment(event.start).format('YYYY-MM-DD HH:mm'),
                                "end": moment(event.end).format('YYYY-MM-DD HH:mm'),
                                "location": event.location.id,
                                "session": event.session,
                                "registeredStudents": event.registeredStudents,
                                "capacity": event.capacity,
                            
                        },
                        type: 'POST'
                    }).done(function (data) {
                        event.id = data;
                        $('#calendar').fullCalendar('updateEvent', event);
                    }).fail(function () {

                    });
                },
                eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
                    $.ajax({
                        url: "{{ path('/admin/session/calendar/editEvent') }}",
                        data: {
                            "id": event.id,
                            "start": moment(event.start).format('YYYY-MM-DD HH:mm'),
                            "end": moment(event.end).format('YYYY-MM-DD HH:mm'),
                            "location": event.location.id,
                            "session": event.session,
                            "registeredStudents": event.registeredStudents,
                            "capacity": event.capacity,
                        },
                        type: 'POST'
                    }).done(function () {

                    }).fail(function () {
                        revertFunc();
                    })
                },
                // TODO eventDragStart/Stop disable popover
                eventDragStop: function (event, jsEvent, ui, view) {
                    // if (isEventOverDiv(jsEvent.clientX, jsEvent.clientY)) {
                    //     $('#calendar').fullCalendar('removeEvents', event._id);
                    // }
                },
                eventClick: function (event, jsEvent, view) {
                    $('#timeslot-modal').modal();

                    $('#timeslot-modal').data('event', event.id);

                    $('#time_slot_date').val(moment(event.start).format('YYYY-MM-DD'));
                    $('#time_slot_startTime').val(moment(event.start).format('HH:mm'));
                    $('#time_slot_endTime').val(moment(event.end).format('HH:mm'));
                    $('#time_slot_location').val(event.location.id).change();
                    $('#time_slot_registeredStudents').val(event.registeredStudents);
                    $('#time_slot_capacity').val(event.capacity);

                    $('#time_slot_session').val(event.session);
                    $('#time_slot_start').val(moment(event.start).format('YYYY-MM-DD HH:mm'));
                    $('#time_slot_end').val(moment(event.end).format('YYYY-MM-DD HH:mm'));

                    $('#time_slot_assignments').empty();

                    $.ajax({
                        url: "{{ path('/admin/session/sessionAssignments') }}",
                        data: {
                            "date": moment(event.start).format('YYYY-MM-DD'),
                            "start": moment(event.start).format('HH:mm')
                        },
                        type: "GET",
                    }).done(function (data) {
                        for (var i in data) {
                            $('#time_slot_assignments').append(`<option value="${data[i].id}">${data[i].mentor}</option>`);
                        }

                        for (var i in event.assignments) {
                            $('#time_slot_assignments option[value="' + event.assignments[i].id + '"]').prop('selected', true);
                        }
                    });
                },
                eventLimit: true,
                themeSystem: 'bootstrap3',
                bootstrapGlypicons: {
                    close: 'glyphicon-remove',
                    prev: 'glyphicon-chevron-left',
                    next: 'glyphicon-chevron-right',
                    prevYear: 'glyphicon-backward',
                    nextYear: 'glyphicon-forward'
                },
                businessHours: [
                    {% for day in hours %}
                    {
                        dow: [{{ day.day }}],
                        start: '{{ day.startTime }}',
                        end: '{{ day.endTime }}'
                    },
                    {% endfor %}
                ],
                events: {
                    url: '{{ path('events') }}',
                    type: 'POST',
                    data: {
                        // put parameters such as filters here
                        "start" : moment($('#calendar').fullCalendar('getView').start).format('YYYY-MM-DDHH:mm:ss'),
                        "end" : moment($('calendar').fullCalendar('getView').end).format("YYYY-MM-DDHH:mm:ss")
                    },
                    success: function (events) {
                        // transform raw event data into something fullcalendar can use
                        for (var event in events) {
				            events[event] = transformEvent(events[event]);
                        }
                    }
                },
                eventRender: function (event, element) {
                    var view = $('#calendar').fullCalendar('getView').type;
                    if (view == 'listMonth') {
                        var descr = '<td class="fc-list-item-title">'
                            + "<strong>Location:</strong> " + event.location.room
                            + '</td>';
                        element.find('.fc-list-item-title').append(descr);
                    } else if(view == 'month') {
                        element.find('.fc-title').remove();
                        element.find('.fc-time').remove();
                        var descr =
                            '<div class="no-overflow"><strong>Title:</strong> ' + event.title + '</div>';

                        element.append(descr);
                    } else {
                        element.find('.fc-title').remove();
                        element.find('.fc-time').remove();
                        var descr =
                            '<div class="no-overflow"><strong>Title:</strong> ' + event.title + '</div>'
                            + "<strong>Location:</strong> " + event.location.room + '<br>';
                        if (event.registrations !== undefined) {
                            descr += "<strong>Capacity:</strong> " + (event.registrations ? event.registrations : 0) + '/' + event.capacity + '<br>';
                        }
                        // + "<strong>Time:</strong> "
                        // + moment(event.start).format("HH:mm") + '-'
                        // + moment(event.end).format("HH:mm") + '<br>';
                        if (event.hasOwnProperty('assignments')) {
                            var names = [];
                            for (var key in event.assignments) {
                                names[key] = event.assignments[key].mentor.firstName;
                            }

                            descr += "<strong>Mentors:</strong> " + names.join(", ");
                        }
                        descr += '<br>'+ "<strong>Registrations:</strong>" + event.registeredStudents + '/' + event.capacity + '<br>';
                        element.append(descr);

                        // element.popover({
                        //     title: event.title,
                        //     trigger: 'hover',
                        //     placement: 'top',
                        //     container: 'body'
                        // });
                    }
                }
            });

            $("#time_slot_form").submit(function(e) {
                e.preventDefault();
		        let form = $(this);
		        let data = new FormData(document.getElementById('time_slot_form'));
                let event = $('#timeslot-modal').data("event");
                data.append("id", event);

                /********* Debug - Print form data *******************
		for (var pair of data.entries()) {
                	console.log(pair[0] + ": " + pair[1]);
                }
		*****************************************************/

		        $.ajax({
                    url: $(this).prop('action'),
                    data: data,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    beforeSend: function () {
                        form.hide();
                        $('#timeslot-loader').show();
                    }
                }).always(function () {
                    $('#timeslot-loader').hide();
                    form.show();
                }).done(function (data, textStatus, jqXHR) {
                    $('#timeslot-modal').modal('hide');
                    // need to update the event
			$('#calendar').fullCalendar('refetchEvents');
                }).fail(function () {

                });
            });
            
            var updateTimeSlotForm = function() {
                $.ajax({
                    url: "{{ path('/admin/session/sessionAssignments') }}",
                    data: {
                        "date": $('#time_slot_date').val(),
                        "start": $('#time_slot_startTime').val()
                    },
                    type: "GET",
                    beforeSend: function() {
                        $('#time_slot_assignments').empty();
                    }
                }).done(function (data) {
                    for (var i in data) {
                        $('#time_slot_assignments').append($('<option>', {value: data[i].id}).text(data[i].mentor));
                    }

                    for (var i in event.assignments) {
                        $('#time_slot_assignments option[value="' + event.assignments[i].id + '"]').prop('selected', true);
                    }
                });
            };
            $('#time_slot_date').on('change', updateTimeSlotForm);
            $('#time_slot_startTime').on('change', updateTimeSlotForm);
            $('#time_slot_endTime').on('change', updateTimeSlotForm);
        });
    </script>


    <script>
            $(function () {

                var text = $('#scheduled_session_session_type option:selected').text();
                if (text == 'quiz') {
                    $('#session-submit').data('active', 'quiz');

                    $('[name="scheduled_session"]').hide();
                    $('[name="quiz"]').show();
                } else {
                    $('#session-submit').data('active', 'scheduled_session');

                    $('[name="quiz"]').hide();
                    $('[name="scheduled_session"]').show();
                }

                $('#scheduled_session_session_type').on('change', function () {
                    var text = $('option:selected', $(this)).text();
                    if (text == 'quiz') {
                        $('#session-submit').data('active', 'quiz');

                        $('[name="scheduled_session"]').hide();
                        $('[name="quiz"]').show();

                        sync_data('#scheduled_session', '#quiz');
                    }
                });

                $('#quiz_session_type').on('change', function () {
                    var text = $('option:selected', $(this)).text();
                    if (text == 'review' || text == 'rework') {
                        $('#session-submit').data('active', 'scheduled_session');

                        $('[name="quiz"]').hide();
                        $('[name="scheduled_session"]').show();

                        sync_data('#quiz', '#scheduled_session');
                    }
                });

                var sync_data = function (one, two) {
                    var topic = $(one + '_session_topic').val();
                    $(two + '_session_topic').val(topic);

                    var type = $(one + '_session_type').val();
                    $(two + '_session_type').val(type);

                    var description = $(one + '_session_description').val();
                    $(two + '_session_description').val(description);

                    var sInstr = $(one + '_session_studentInstructions').val();
                    $(two + '_session_studentInstructions').val(sInstr);

                    var mInstr = $(one + '_session_mentorInstructions').val();
                    $(two + '_session_mentorInstructions').val(mInstr);

                    // sections
                    var sections = [];
                    $.each($(one + '_session_sections option:selected'), function () {
                        sections.push($(this).val());
                    });
                    $(two + '_session_sections').val(sections);
                    $(two + '_session_sections').trigger('change');

                    var graded = $(one + '_session_graded').is(':checked');
                    $(two + '_session_graded').prop('checked', graded);

                    var numeric = $(one + '_session_numericGrade').is(':checked');
                    $(two + '_session_numericGrade').prop('checked', numeric);

                    // files

                    var color = $(one + '_session_color').val();
                    $(two + '_session_color').val(color);
                };

                $('#session-submit').on('click', function () {
                    $('[name="' + $(this).data('active') + '"]').submit();
                });
            });
        </script>


{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-xs-7">
            <h3>Calendar</h3>
        </div>
        <div class="col-xs-3">
            <div class="btn-group" role="group">
                {#<button id="create-session" type="button" class="btn btn-default">Create Session</button>#}
                <a class="btn btn-default" href="{{ path('/admin/session/create') }}">Create Session</a>
                <a id="view-requests" href="{{ path('/admin/session/request/') }}" class="btn btn-default">View
                    Requests</a>
            </div>
        </div>
        <div class="col-xs-2">
            <div class="input-group">
                <button id="sidebar-toggle" class="btn btn-default" type="button">Toggle Sidebar</button>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="container">
        <div id="row-main" class="row row-eq-height">
            <div id="content" class="col-md-10">
                <div class="panel">
                    <div class="panel-body">
                        <div id='calendar'></div>
                    </div>
                </div>
            </div>
            <div id="sidebar" class="col-md-2">
                <div class="affix">
                    {% if sessions %}
                        <div class="panel">
                            <div class="panel-body">
                                <h3>
                                    <small>Unscheduled Sessions</small>
                                </h3>
                                <div id="external-events">
                                    {% for session in sessions %}
                                        {% set count = session.repeats -  session.timeSlots.size() %}
                                        <div id="external-{{ session.id }}" class="fc-event label label-default"
                                            style="background-color: {{ session.color }};
                                                    display: inline-block;
                                                    /*overflow:hidden;*/
                                                    /*text-overflow: ellipsis;*/
                                                    max-width: 120px"
                                            data-event='{

                                                    "id":"temp-{{ session.id }}",
                                                    "title":"{{ session.topic }}",
                                                    "color":"{{ session.color }}",
                                                    "stick":false,
                                                    "duration":"{{ session.defaultDuration }}",
                                                    "capacity":"{{ session.defaultCapacity }}",
                                                    "location":{
                                                        "id":"{{ session.roomId }}",
                                                        "room":"{{ session.defaultLocation }}"
                                                    },
                                                    "session":"{{ session.id }}"
                                                    }'
                                            data-counter="counter-{{ session.id }}"
                                            data-count="{{ count }}">

                                            {{ session.topic }}
                                        </div>
                                        <span id="counter-{{ session.id }}" class="badge">{{ count }}</span>
                                        <br>
                                    {% endfor %}
                                </div>
                                {#</li>#}
                                {#</ul>#}
                                {#</div>#}
                                {#</div>#}
                                {#<div class="row">#}
                                {#<div class="col-xs-12">#}
                                {#<h3>#}
                                {#<small>Filters</small>#}
                                {#</h3>#}
                                {#<h4>#}
                                {#<small>Course</small>#}
                                {#</h4>#}
                                {#<select multiple class="form-control">#}

                                {#</select>#}
                                {#<h4>#}
                                {#<small>Instructor</small>#}
                                {#</h4>#}
                                {#<select multiple class="form-control">#}

                                {#</select>#}
                                {#<h4>#}
                                {#<small>Room</small>#}
                                {#</h4>#}
                                {#<select multiple class="form-control">#}

                                {#</select>#}
                                {#</div>#}
                                {#</div>#}
                                {#<div class="row">#}
                                {#<div class="col-xs-12"></div>#}
                                {#</div>#}
                            </div>
                            {#<div class="panel-footer"></div>#}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
    <div id="timeslot-modal" class="modal fade" data-event>
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form action="/admin/session/calendar/assignShifts" class="needs-validation" id="time_slot_form" novalidate>
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span
                                    class="sr-only">close</span></button>
                        <h4 class="modal-title">Event Details</h4>
                    </div>
                    <div class="modal-body">
                        <div id="timeslot-loader" class="text-center" style="display: none;">
                            {# <img src="{{ asset('build/images/ajax-loader.gif') }}"> #}
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="time_slot_date">Date</label>
                            <input class="form-control" type="date" id="time_slot_date" name="date" value="" required>
                            {# <div class="invalid-feedback">Required</div> #}
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="time_slot_startTime">Start Time</label>
                            <input class="form-control" type="time" id="time_slot_startTime" name="startTime" value="" required>
                            {# <div class="invalid-feedback">Required</div> #}
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="time_slot_endTime">End Time</label>
                            <input class="form-control" type="time" id="time_slot_endTime" name="endTime" value="" required>
                            {# <div class="invalid-feedback">Required</div> #}
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="time_slot_location">Location</label>
                            <select id="time_slot_location" name="location" class="form-control col-md-7 col-xs-12">
                                {% for location in locations %}
                                    <option value="{{ location.id }}">{{ location.location }}</option>
                                {% endfor %}
                            </select>
                            {# <div class="invalid-feedback">Required</div>         #}
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="time_slot_capacity">Capacity</label>
                            <input class="form-control" type="number" id="time_slot_capacity" name="capacity" min="1" max="50" value=""> {#form.scheduledSession.capacity#}
                            {# <div class="invalid-feedback">Required</div> #}
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="time_slot_assignments">Assignments</label>
                            <select class="form-control" id="time_slot_assignments" name="assignments" multiple></select>
                            {# <div class="invalid-feedback">Required</div> #}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="timeslot-submit" type="submit" class="btn btn-success">
                            Submit
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{# TODO
    files, quiz creation success, colors, add session on success of creation, no on click for quiz,
    pdf export
#}
